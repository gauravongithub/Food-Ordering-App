{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\garim\\\\OneDrive\\\\Desktop\\\\GauravWebDev\\\\UdemyReact\\\\ShoppingCart\\\\01-starting-project\\\\src\\\\Components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport classes from \"./AvailableMeals.module.css\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem\";\nimport react from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [Isloading, setIsLoading] = useState(true);\n  const [httpError, sethttpError] = useState(null);\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://react-http-151fd-default-rtdb.firebaseio.com/Meals.json');\n\n      if (!response.ok) {\n        throw new Error('Something went wrong');\n      }\n\n      const responseData = await response.json();\n      const loadedMeals = [];\n\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n\n    try {\n      fetchMeals().catch(error => {\n        setIsLoading(false);\n        sethttpError(error.message);\n      });\n    } catch (error) {}\n  }, []);\n\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.mealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 8\n    }, this);\n  } //console.log(meals);\n\n\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 43\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: [Isloading && /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: classes.MealsLoading,\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }, this), !Isloading && /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AvailableMeals, \"qLt4MnAEa72tMSmICkRBOiXJqKM=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["C:/Users/garim/OneDrive/Desktop/GauravWebDev/UdemyReact/ShoppingCart/01-starting-project/src/Components/Meals/AvailableMeals.js"],"names":["useEffect","useState","classes","Card","MealItem","react","AvailableMeals","meals","setMeals","Isloading","setIsLoading","httpError","sethttpError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","catch","error","message","mealsError","mealsList","map","meal","MealsLoading"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAE3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,IAAD,CAA1C;AAGCD,EAAAA,SAAS,CAAC,MAAI;AACZ,UAAMa,UAAU,GAAG,YAAU;AAC7B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iEAAD,CAA5B;;AAEA,UAAG,CAACD,QAAQ,CAACE,EAAb,EAAgB;AACd,cAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;AAED;;AAED,YAAMC,YAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAA3B;AACA,YAAMC,WAAW,GAAG,EAApB;;AAEA,WAAI,MAAMC,GAAV,IAAiBH,YAAjB,EAA8B;AAC5BE,QAAAA,WAAW,CAACE,IAAZ,CAAiB;AACfC,UAAAA,EAAE,EAAEF,GADW;AAEfG,UAAAA,IAAI,EAAGN,YAAY,CAACG,GAAD,CAAZ,CAAkBG,IAFV;AAGfC,UAAAA,WAAW,EAAGP,YAAY,CAACG,GAAD,CAAZ,CAAkBI,WAHjB;AAIfC,UAAAA,KAAK,EAAGR,YAAY,CAACG,GAAD,CAAZ,CAAkBK;AAJX,SAAjB;AAMD;;AACDlB,MAAAA,QAAQ,CAACY,WAAD,CAAR;AACAV,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACC,KArBD;;AAuBD,QAAG;AACDG,MAAAA,UAAU,GAAGc,KAAb,CAAmBC,KAAK,IAAI;AAC1BlB,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACFE,QAAAA,YAAY,CAACgB,KAAK,CAACC,OAAP,CAAZ;AAEC,OAJD;AAKD,KAND,CAOA,OAAMD,KAAN,EAAY,CACX;AACD,GAjCQ,EAiCN,EAjCM,CAAT;;AAqCA,MAAGjB,SAAH,EAAa;AACX,wBACE;AAAS,MAAA,SAAS,EAAET,OAAO,CAAC4B,UAA5B;AAAA,6BACE;AAAA,kBAAInB;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAlDyB,CAqD1B;;;AACC,QAAMoB,SAAS,GAAGxB,KAAK,CAACyB,GAAN,CAAWC,IAAD,iBAAU,QAAC,QAAD;AAEtC,IAAA,EAAE,EAAIA,IAAI,CAACV,EAF2B;AAGtC,IAAA,IAAI,EAAEU,IAAI,CAACT,IAH2B;AAItC,IAAA,WAAW,EAAGS,IAAI,CAACR,WAJmB;AAKtC,IAAA,KAAK,EAAEQ,IAAI,CAACP;AAL0B,KACjCO,IAAI,CAACV,EAD4B;AAAA;AAAA;AAAA;AAAA,UAApB,CAAlB;AAOA,sBAAO;AAAS,IAAA,SAAS,EAAErB,OAAO,CAACK,KAA5B;AAAA,eAENE,SAAS,iBAAI;AAAI,MAAA,SAAS,EAAEP,OAAO,CAACgC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFP,EAIN,CAACzB,SAAD,iBACE,QAAC,IAAD;AAAA,6BACA;AAAA,kBACEsB;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YALI;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAaH,CA1ED;;GAAMzB,c;;KAAAA,c;AA2EN,eAAeA,cAAf","sourcesContent":["import {useEffect, useState} from 'react';\r\nimport classes from \"./AvailableMeals.module.css\";\r\nimport Card from \"../UI/Card\";\r\nimport MealItem from \"./MealItem\";\r\nimport react from \"react\";\r\n\r\nconst AvailableMeals = () => {\r\n\r\n  const [meals, setMeals] = useState([]);\r\n  const [Isloading, setIsLoading] = useState(true);\r\n  const [httpError, sethttpError] = useState(null);\r\n\r\n\r\n   useEffect(()=>{\r\n     const fetchMeals = async() =>{\r\n     const response = await fetch('https://react-http-151fd-default-rtdb.firebaseio.com/Meals.json');\r\n\r\n     if(!response.ok){\r\n       throw new Error('Something went wrong');\r\n\r\n     }\r\n\r\n     const responseData = await response.json();\r\n     const loadedMeals = [];\r\n\r\n     for(const key in responseData){\r\n       loadedMeals.push({\r\n         id: key,\r\n         name : responseData[key].name,\r\n         description : responseData[key].description,\r\n         price : responseData[key].price\r\n       });\r\n     }\r\n     setMeals(loadedMeals);\r\n     setIsLoading(false);\r\n     };\r\n\r\n    try{\r\n      fetchMeals().catch(error => {\r\n        setIsLoading(false);\r\n      sethttpError(error.message);\r\n\r\n      });\r\n    }\r\n    catch(error){\r\n    }\r\n   }, []);\r\n\r\n\r\n\r\n   if(httpError){\r\n     return(\r\n       <section className={classes.mealsError}>\r\n         <p>{httpError}</p>\r\n       </section>\r\n     );\r\n   }\r\n\r\n\r\n   //console.log(meals);\r\n    const mealsList = meals.map((meal) => <MealItem \r\n    key={meal.id} \r\n    id = {meal.id}\r\n    name={meal.name}  \r\n    description ={meal.description}\r\n    price={meal.price}\r\n     />);\r\n    return <section className={classes.meals}>\r\n\r\n    {Isloading && <h1 className={classes.MealsLoading}>Loading...</h1>}\r\n\r\n    {!Isloading && \r\n       <Card>\r\n       <ul>\r\n        {mealsList}\r\n        </ul>\r\n       </Card>\r\n      }\r\n    </section>\r\n    \r\n}\r\nexport default AvailableMeals;"]},"metadata":{},"sourceType":"module"}