{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\garim\\\\OneDrive\\\\Desktop\\\\GauravWebDev\\\\UdemyReact\\\\ShoppingCart\\\\01-starting-project\\\\src\\\\store\\\\CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport CartContext from \"./card-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    const updatedItems = state.items.concat(action.item);\n    const existingCartItemIndex = state.item.findIndex(item => item.id === action.item.id);\n    const existingCartItem = state.items[existingCartItemIndex];\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    let updatedItem;\n    if (existingCartItem) return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 12\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["C:/Users/garim/OneDrive/Desktop/GauravWebDev/UdemyReact/ShoppingCart/01-starting-project/src/store/CartProvider.js"],"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","existingCartItemIndex","findIndex","id","existingCartItem","updatedTotalAmount","price","amount","updatedItem","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,WAAW,EAAE;AAFQ,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;AAElC,MAAGA,MAAM,CAACC,IAAP,KAAgB,KAAnB,EAAyB;AACrB,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AAEA,UAAMC,qBAAqB,GAAGN,KAAK,CAACK,IAAN,CAAWE,SAAX,CAC1BF,IAAI,IAAIA,IAAI,CAACG,EAAL,KAAYP,MAAM,CAACI,IAAP,CAAYG,EADN,CAA9B;AAII,UAAMC,gBAAgB,GAAGT,KAAK,CAACH,KAAN,CAAYS,qBAAZ,CAAzB;AACJ,UAAMI,kBAAkB,GAAGV,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYM,KAAZ,GAAkBV,MAAM,CAACI,IAAP,CAAYO,MAA7E;AAEA,QAAIC,WAAJ;AAGA,QAAGJ,gBAAH,EACA,OAAO;AACHZ,MAAAA,KAAK,EAAEM,YADJ;AAEHL,MAAAA,WAAW,EAAEY;AAFV,KAAP;AAKH;;AAED,SAAOd,gBAAP;AACH,CAxBD;;AA0BA,MAAMkB,YAAY,GAAGC,KAAK,IAAG;AAAA;;AAEzB,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCvB,UAAU,CAACK,WAAD,EAAaH,gBAAb,CAAlD;;AACA,QAAMsB,oBAAoB,GAAGb,IAAI,IAAG;AAChCY,IAAAA,kBAAkB,CAAC;AAACf,MAAAA,IAAI,EAAE,KAAP;AAAcG,MAAAA,IAAI,EAACA;AAAnB,KAAD,CAAlB;AACH,GAFD;;AAGA,QAAMc,yBAAyB,GAAGX,EAAE,IAAG;AACnCS,IAAAA,kBAAkB,CAAC;AAACf,MAAAA,IAAI,EAAE,QAAP;AAAiBM,MAAAA,EAAE,EAACA;AAApB,KAAD,CAAlB;AACH,GAFD;;AAIA,QAAMY,WAAW,GAAG;AAChBvB,IAAAA,KAAK,EAAEmB,SAAS,CAACnB,KADD;AAEhBC,IAAAA,WAAW,EAACkB,SAAS,CAAClB,WAFN;AAGhBuB,IAAAA,OAAO,EAAEH,oBAHO;AAIhBI,IAAAA,UAAU,EAAEH;AAJI,GAApB;AAOA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACFL,KAAK,CAACQ;AADJ;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH,CApBD;;GAAMT,Y;;KAAAA,Y;AAsBN,eAAeA,YAAf","sourcesContent":["import { useReducer } from \"react\";\r\nimport CartContext from \"./card-context\";\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0\r\n};\r\n\r\nconst cartReducer = (state,action) => {\r\n    \r\n    if(action.type === 'ADD'){        \r\n        const updatedItems = state.items.concat(action.item);\r\n\r\n        const existingCartItemIndex = state.item.findIndex(\r\n            item => item.id === action.item.id\r\n            );\r\n\r\n            const existingCartItem = state.items[existingCartItemIndex];\r\n        const updatedTotalAmount = state.totalAmount + action.item.price*action.item.amount;\r\n        \r\n        let updatedItem;\r\n        \r\n\r\n        if(existingCartItem)\r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: updatedTotalAmount\r\n            \r\n        };\r\n    }\r\n\r\n    return defaultCartState;\r\n}\r\n\r\nconst CartProvider = props =>{\r\n\r\n    const [cartState, dispatchCartAction] = useReducer(cartReducer,defaultCartState);\r\n    const addItemToCartHandler = item =>{\r\n        dispatchCartAction({type: 'ADD', item:item});\r\n    };\r\n    const removeItemFromCartHandler = id =>{\r\n        dispatchCartAction({type: 'REMOVE', id:id});\r\n    };\r\n\r\n    const cartContext = {\r\n        items: cartState.items,\r\n        totalAmount:cartState.totalAmount,\r\n        addItem: addItemToCartHandler,\r\n        removeItem: removeItemFromCartHandler\r\n    };\r\n\r\n    return <CartContext.Provider value={cartContext}>\r\n        {props.children}\r\n    </CartContext.Provider>\r\n}\r\n\r\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}